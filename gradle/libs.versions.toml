[versions]
assertJ             = '3.22.0'
commonsBeanUtils    = '1.9.4'
commonsConfig       = '2.9.0'
commonsIo           = '2.11.0'
commonsLang3        = '3.12.0'
commonsText         = '1.9'
freemarker          = '2.3.32'
guava               = '31.1-jre'
guice               = '7.0.0'
jacksonYaml         = '2.15.0'
jakartaAnnotations  = '2.1.1'
jakartaInject       = '2.0.1'
jmustache           = '1.15'
junit               = '5.9.2'
log4j               = '2.18.0'
logback             = '1.4.7'
lombok              = '1.18.26'
mockito             = '5.3.1'
picocli             = '4.7.3'
slf4j               = '2.0.7'
systemRules         = '1.19.0'
systemLambda        = '1.2.1'
truth               = '1.1.3'
vavr                = '1.0.0-alpha-4'


[libraries]

assertJ             = { module = "org.assertj:assertj-core", version.ref = "assertJ" }
commonsBeanUtils    = { module = "commons-beanutils:commons-beanutils", version.ref = "commonsBeanUtils" }
commonsConfig       = { module = "org.apache.commons:commons-configuration2", version.ref = "commonsConfig" }
commonsIo           = { module = "commons-io:commons-io", version.ref="commonsIo" }
commonsLang3        = { module = "org.apache.commons:commons-lang3", version.ref="commonsLang3" }
commonsText         = { module = "org.apache.commons:commons-text", version.ref="commonsText" }
freemarker          = { module = "org.freemarker:freemarker", version.ref="freemarker" }
guava               = { module = "com.google.guava:guava", version.ref="guava" }
guice               = { module = "com.google.inject:guice", version.ref="guice" }
jacksonYaml         = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref="jacksonYaml" }
jmustache           = { module = "com.samskivert:jmustache", version.ref = "jmustache" }
junitBillOfMaterial = { module = "org.junit:junit-bom", version.ref="junit" }
junitJupiter        = { module = "org.junit.jupiter:junit-jupiter", version.ref="junit" }
junitPlatformRunner = { module = "org.junit.platform:junit-platform-runner", version.ref="junit" }
jakartaAnnotations  = { module = "jakarta.annotation:jakarta.annotation-api", version.ref="jakartaAnnotations" }
jakartaInject       = { module = "jakarta.inject:jakarta.inject-api", version.ref="jakartaInject" }
junitSystemRules    = { module = "com.github.stefanbirkner:system-rules", version.ref="systemRules" }
log4jApi            = { module = "org.apache.logging.log4j:log4j-api", version.ref="log4j" }
log4jCore           = { module = "org.apache.logging.log4j:log4j-core", version.ref="log4j" }
logbackClassic      = { module = "ch.qos.logback:logback-classic", version.ref="logback" }
lombok              = { module = "org.projectlombok:lombok", version.ref="lombok" }
mockito             = { module = "org.mockito:mockito-core", version.ref="mockito" }
picocli             = { module = "info.picocli:picocli", version.ref="picocli" }
picocliCodeGen      = { module = "info.picocli:picocli-codegen", version.ref="picocli" }
slf4jApi            = { module = "org.slf4j:slf4j-api", version.ref="slf4j" }
systemLambda        = { module = "com.github.stefanbirkner:system-lambda", version.ref="systemLambda" }
truth               = { module = "com.google.truth:truth", version.ref="truth" }
vavr                = { module = "io.vavr:vavr", version.ref="vavr" }


[plugins]
versions            = { id = "com.github.ben-manes.versions", version = "0.46.0" }
spotless            = { id = "com.diffplug.spotless", version = "6.18.0" }
kordamp-jacoco      = { id = "org.kordamp.gradle.jacoco", version = "0.50.0" }
kordamp-testing     = { id = "org.kordamp.gradle.testing", version= "0.50.0" }
lombok              = { id = "io.freefair.lombok", version = "8.0.1" }
shadow-jar          = { id = "com.github.johnrengelman.shadow", version = "7.1.2" }
sonar               = { id = "org.sonarqube", version = "4.0.0.2929" }

